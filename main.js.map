{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/components/modal.js","webpack://mesto-project-ff/./src/scripts/components/api.js","webpack://mesto-project-ff/./src/scripts/components/card.js","webpack://mesto-project-ff/./src/scripts/components/validation.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["export function openPopup(popup){\r\n  popup.classList.add('popup_is-opened');\r\n\r\n  document.addEventListener('keydown', pressEscape);\r\n} \r\n\r\nexport function closePopup(popup){\r\n  popup.classList.remove('popup_is-opened');\r\n\r\n  document.removeEventListener('keydown', pressEscape);\r\n}\r\n\r\nfunction clickOverlay(evt) {\r\n  if (evt.target.classList.contains('popup_is-opened')) {\r\n    closePopup(evt.target);\r\n  }\r\n}\r\n\r\nfunction pressEscape(evt) {\r\n  if (evt.key === 'Escape') {\r\n    const openPopup = document.querySelector('.popup_is-opened');\r\n    if (openPopup) {\r\n      closePopup(openPopup);\r\n    }\r\n  }\r\n}\r\n\r\nexport const setModalWindowEventListeners = (modalWindow) => {\r\n  modalWindow.classList.add('popup_is-animated');\r\n\r\n  const closeButton = modalWindow.querySelector(\".popup__close\");\r\n\r\n  closeButton.addEventListener('click', () => {\r\n    closePopup(modalWindow);\r\n  });\r\n\r\n  modalWindow.addEventListener('click', clickOverlay);\r\n}\r\n","const token = \"963414ea-0ced-4516-965e-e8c378c6da30\";\r\nconst cohortId = \"wff-cohort-38\";\r\n\r\nexport const config = {\r\n  baseUrl: `https://nomoreparties.co/v1/${cohortId}`,\r\n  headers: {\r\n    authorization: `${token}`,\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nconst handleResponse = (res) => {\r\n  if (!res.ok) {\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport const getUserInfo = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  })\r\n  .then(handleResponse)\r\n};\r\n\r\nexport const updateUserInfo = (nameValue, descriptionValue) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: nameValue,\r\n      about: descriptionValue,\r\n    }),\r\n  })\r\n  .then(handleResponse)\r\n};\r\n\r\nexport const updateUserAvatar = (imageLink) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar `, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({ avatar: imageLink }),\r\n  })\r\n  .then(handleResponse)\r\n};\r\n\r\nexport const getCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"GET\",\r\n    headers: config.headers,\r\n  })\r\n  .then(handleResponse)\r\n};\r\n\r\nexport const createNewCard = (newCard) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify(newCard),\r\n  })\r\n  .then(handleResponse)\r\n};\r\n\r\nexport const getCardToDelete = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  })\r\n  .then(handleResponse)\r\n};\r\n\r\nexport const getLikeInfo = (cardId, method) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: method,\r\n    headers: config.headers,\r\n  })\r\n  .then(handleResponse)\r\n};\r\n","import { getLikeInfo } from \"./api.js\";\r\n\r\nexport const createCard = (card, { handleCardDelete, openPopupImage, likeToggle, }, currentUserId) => {\r\n  const cardTemplate = document.querySelector('#card-template').content;\r\n  const cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n  const cardImage = cardElement.querySelector('.card__image');\r\n  const cardLike = cardElement.querySelector('.card__like-button');\r\n  const cardLikeCount = cardElement.querySelector('.card__like-count');\r\n  const cardDeleteButton = cardElement.querySelector('.card__delete-button');\r\n\r\n  cardElement.dataset.id = card._id;\r\n  cardLike.dataset.id = card._id;\r\n  \r\n  cardImage.src = card.link; \r\n  cardImage.alt = card.name;\r\n\r\n  if (cardLikeCount && card.likes && currentUserId) {\r\n    if(card.likes.some(user => user._id == currentUserId)){\r\n      cardLike.classList.add('card__like-button_is-active');\r\n    }\r\n    cardLikeCount.textContent = card.likes.length;\r\n  }\r\n\r\n  if (card.owner._id != currentUserId) {\r\n    cardDeleteButton.remove();\r\n  } else {\r\n    cardDeleteButton.addEventListener('click', () => handleCardDelete(cardElement));\r\n  }\r\n  \r\n  cardLike.addEventListener('click', () => likeToggle(cardLike, cardLikeCount));\r\n\r\n  cardImage.addEventListener('click', () => openPopupImage(card));\r\n  \r\n  cardElement.querySelector('.card__title').textContent = card.name;\r\n\r\n  return cardElement;\r\n}\r\n\r\nexport function likeToggle(cardButton, cardLikeCount) {\r\n  const isLiked = cardButton.classList.contains('card__like-button_is-active');\r\n  const method = isLiked ? 'DELETE' : 'PUT';\r\n  const cardId = cardButton.dataset.id;\r\n  getLikeInfo(cardId, method)\r\n  .then (card => {\r\n    cardLikeCount.textContent = card.likes.length;\r\n    cardButton.classList.toggle('card__like-button_is-active', !isLiked);\r\n  }) \r\n  .catch(err => {\r\n    console.error(err);\r\n  });\r\n}\r\n\r\nexport function cardDelete(cardElement) {\r\n  cardElement.remove();\r\n}\r\n\r\n\r\n\r\n","const showInputError = (formElement, inputElement, errorMessage, config) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(config.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(config.errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement, config) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(config.inputErrorClass);\r\n  errorElement.classList.remove(config.errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\nconst checkInputValidity = (formElement, inputElement, config) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, config);\r\n  } else {\r\n    hideInputError(formElement, inputElement, config);\r\n  }\r\n};\r\n\r\nfunction hasInvalidInput(inputList) {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  })\r\n}\r\n\r\nconst disableSubmitButton = (buttonElement, config) => {\r\n  buttonElement.disabled = true;\r\n  buttonElement.classList.add(config.inactiveButtonClass);\r\n};\r\n\r\nconst enableSubmitButton = (buttonElement, config) => {\r\n  buttonElement.disabled = false;\r\n  buttonElement.classList.remove(config.inactiveButtonClass);\r\n};\r\n\r\nfunction toggleButtonState(inputList, buttonElement, config) {\r\n  if(hasInvalidInput(inputList)) {\r\n    disableSubmitButton(buttonElement, config);\r\n  } else {\r\n    enableSubmitButton(buttonElement, config);\r\n  }\r\n}\r\n\r\nconst setEventListeners = (formElement, config) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(config.inputSelector));\r\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, config);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      toggleButtonState(inputList, buttonElement, config);\r\n      checkInputValidity(formElement, inputElement, config);\r\n    });\r\n  });\r\n};\r\n\r\nexport const enableValidation = (config) => {\r\n  const formList = Array.from(document.querySelectorAll(config.formSelector));\r\n  formList.forEach((formElement) => {\r\n  formElement.addEventListener('submit', (evt) => {\r\n    evt.preventDefault();\r\n    });\r\n  setEventListeners(formElement, config);\r\n  }); \r\n}\r\n\r\nexport const clearValidation = (formElement, config) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(config.inputSelector));\r\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, config);\r\n    inputElement.setCustomValidity(\"\");\r\n  });\r\n\r\n  disableSubmitButton(buttonElement, config);\r\n};","import \"../pages/index.css\";\r\nimport { openPopup, closePopup, setModalWindowEventListeners } from \"./components/modal.js\";\r\nimport { createCard, likeToggle, cardDelete } from \"./components/card.js\";\r\nimport { enableValidation, clearValidation } from \"./components/validation.js\";\r\nimport {\r\n  getUserInfo,\r\n  getCards,\r\n  getCardToDelete,\r\n  updateUserInfo,\r\n  createNewCard,\r\n  updateUserAvatar,\r\n} from \"./components/api.js\";\r\n\r\nconst cardList = document.querySelector(\".places__list\");\r\n\r\nconst formEditProfile = document.forms[\"edit-profile\"];\r\nlet nameInput = formEditProfile.querySelector(\".popup__input_type_name\");\r\nlet descriptionInput = formEditProfile.querySelector(\".popup__input_type_description\");\r\n\r\nlet profileNameElement = document.querySelector(\".profile__title\");\r\nlet profileDescriptionElement = document.querySelector(\".profile__description\");\r\nlet profileImage = document.querySelector(\".profile__image\");\r\n\r\nconst formNewCard = document.forms[\"new-place\"];\r\nlet newCardNameInput = formNewCard.querySelector(\".popup__input_type_card-name\");\r\nlet newCardLinkInput = formNewCard.querySelector(\".popup__input_type_url\");\r\n\r\nconst formEditProfileAvatar = document.forms[\"edit-profile-avatar\"];\r\n\r\nconst forms = [formEditProfile, formNewCard, formEditProfileAvatar ];\r\n\r\nconst popupImage = document.querySelector(\".popup__image\");\r\nconst popupDescription = document.querySelector(\".popup__caption\");\r\n\r\nconst popupTypeEdit = document.querySelector(\".popup_type_edit\");\r\nconst popupTypeAdd = document.querySelector(\".popup_type_new-card\");\r\nconst popupTypeImage = document.querySelector(\".popup_type_image\");\r\nconst popupTypeConfirm = document.querySelector(\".popup_type_confirm\");\r\nconst popupTypeEditProfileAvatar = document.querySelector(\".popup_type_edit_profile_avatar\");\r\nconst popups = [\r\n  popupTypeEdit,\r\n  popupTypeAdd,\r\n  popupTypeEditProfileAvatar,\r\n  popupTypeImage,\r\n  popupTypeConfirm,\r\n];\r\n\r\nconst buttonConfirm = popupTypeConfirm.querySelector(\".popup__button_confirm\");\r\nconst buttonEditProfileAvatar = document.querySelector(\".profile__image_button-edit\");\r\n\r\nlet cardIdToDelete = null;\r\nlet cardElementToDelete = null;\r\n\r\nlet currentUserId = null;\r\n\r\nconst profileEditButton = document.querySelector(\".profile__edit-button\");\r\nconst profileAddButton = document.querySelector(\".profile__add-button\");\r\nconst buttons = [profileEditButton, profileAddButton, buttonEditProfileAvatar];\r\n\r\nconst validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"button_inactive\",\r\n  inputErrorClass: \"form__input_type_error\",\r\n  errorClass: \"form__input-error_active\",\r\n};\r\n\r\nconst cardData = { \r\n  handleCardDelete, \r\n  openPopupImage, \r\n  likeToggle, \r\n};\r\n\r\nPromise.all([getUserInfo(), getCards()])\r\n  .then(([userData, cards]) => {\r\n    currentUserId = userData._id;\r\n    profileDescriptionElement.textContent = userData.about;\r\n    profileNameElement.textContent = userData.name;\r\n    profileImage.style.backgroundImage = `url('${userData.avatar}')`;\r\n\r\n    cards.forEach((card) => {\r\n      const cardElement = createCard(card, cardData, currentUserId);\r\n      cardList.append(cardElement);\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  })\r\n\r\nfunction handleCardDelete(cardElement) {\r\n  openPopup(popupTypeConfirm);\r\n  cardIdToDelete = cardElement.dataset.id;\r\n  cardElementToDelete = cardElement;\r\n}\r\n\r\nbuttonConfirm.addEventListener(\"click\", () => {\r\n    getCardToDelete(cardIdToDelete)\r\n    .then(() => {\r\n      cardDelete(cardElementToDelete);\r\n      cardIdToDelete = null;\r\n      cardElementToDelete = null;\r\n      closePopup(popupTypeConfirm);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n});\r\n\r\nfunction openPopupImage(card) {\r\n  popupDescription.textContent = card.name;\r\n  popupImage.alt = card.name;\r\n  popupImage.src = card.link;\r\n\r\n  openPopup(popupTypeImage);\r\n}\r\n\r\nbuttons.forEach((button, index) => {\r\n  button.addEventListener(\"click\", () => {\r\n    resetAndOpenPopup({\r\n      form: forms[index],\r\n      popup: popups[index],\r\n      resetForm: resetFormEditInputs,\r\n    });\r\n  });\r\n});\r\n\r\npopups.forEach(popup => {\r\n  setModalWindowEventListeners(popup);\r\n})\r\n\r\nfunction resetFormEditInputs() {\r\n  getUserInfo()\r\n  .then(data => {\r\n    nameInput.value = data.name;\r\n    descriptionInput.value = data.about;\r\n  });\r\n}\r\n\r\nfunction resetAndOpenPopup({form, popup, resetForm = () => form.reset()}) {\r\n  resetForm();\r\n\r\n  clearValidation(form, validationConfig);\r\n\r\n  openPopup(popup);\r\n}\r\n\r\n\r\nfunction handleFormEditProfileSubmit(evt) {\r\n\r\n  setButtonText(evt.target, true);\r\n  const nameValue = nameInput.value;\r\n  const descriptionValue = descriptionInput.value;\r\n\r\n  profileNameElement.textContent = nameValue;\r\n  profileDescriptionElement.textContent = descriptionValue;\r\n\r\n  updateUserInfo(nameValue, descriptionValue)\r\n    .then((data) => {;\r\n      profileNameElement.textContent = data.name;\r\n      profileDescriptionElement.textContent = data.about;\r\n      \r\n      closePopup(popupTypeEdit);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n    .finally(() => {\r\n      setButtonText(evt.target, false);\r\n    });\r\n}\r\n\r\nformEditProfile.addEventListener(\"submit\", handleFormEditProfileSubmit);\r\n\r\nfunction newCard(evt) {\r\n\r\n  setButtonText(evt.target, true);\r\n  const cardName = newCardNameInput.value;\r\n  const cardLink = newCardLinkInput.value;\r\n\r\n  const newCard = {\r\n    name: cardName,\r\n    link: cardLink,\r\n  };\r\n\r\n  createNewCard(newCard)\r\n    .then((card) => {\r\n      const cardElement = createCard(card, cardData, currentUserId);\r\n      cardList.prepend(cardElement);\r\n\r\n      closePopup(popupTypeAdd);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n    .finally(() => {\r\n      setButtonText(evt.target, false);\r\n    });\r\n}\r\n\r\nformNewCard.addEventListener(\"submit\", newCard);\r\n\r\nfunction editAvatar(evt) {\r\n\r\n  setButtonText(evt.target, true);\r\n  const imageLink = document.querySelector(\"#edit-profile\").value;\r\n\r\n  updateUserAvatar(imageLink)\r\n    .then(() => {\r\n      profileImage.style.backgroundImage = `url('${imageLink}')`;\r\n      closePopup(popupTypeEditProfileAvatar);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n    .finally(() => {\r\n      setButtonText(evt.target, false);\r\n    });\r\n}\r\n\r\nformEditProfileAvatar.addEventListener(\"submit\", editAvatar);\r\n\r\nfunction setButtonText(form, isLoading) {\r\n  const button = form.querySelector(\".popup__button\");\r\n  const defaultText = \"Сохранить\";\r\n  const loadingText = \"Сохранение...\";\r\n  if (button) {\r\n    button.textContent = isLoading ? loadingText : defaultText;\r\n  }\r\n}\r\n\r\nenableValidation(validationConfig);"],"names":["openPopup","popup","classList","add","document","addEventListener","pressEscape","closePopup","remove","removeEventListener","clickOverlay","evt","target","contains","key","querySelector","config","baseUrl","concat","headers","authorization","handleResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","then","createCard","card","_ref","currentUserId","handleCardDelete","openPopupImage","likeToggle","cardElement","content","cloneNode","cardImage","cardLike","cardLikeCount","cardDeleteButton","dataset","id","_id","src","link","alt","name","likes","some","user","textContent","length","owner","hideInputError","formElement","inputElement","errorElement","inputErrorClass","errorClass","disableSubmitButton","buttonElement","disabled","inactiveButtonClass","toggleButtonState","inputList","validity","valid","hasInvalidInput","enableSubmitButton","cardList","formEditProfile","forms","nameInput","descriptionInput","profileNameElement","profileDescriptionElement","profileImage","formNewCard","newCardNameInput","newCardLinkInput","formEditProfileAvatar","popupImage","popupDescription","popupTypeEdit","popupTypeAdd","popupTypeImage","popupTypeConfirm","popupTypeEditProfileAvatar","popups","buttonConfirm","buttonEditProfileAvatar","cardIdToDelete","cardElementToDelete","buttons","validationConfig","formSelector","inputSelector","submitButtonSelector","cardData","cardButton","isLiked","method","cardId","getLikeInfo","toggle","catch","err","console","error","resetFormEditInputs","data","value","about","setButtonText","form","isLoading","button","all","_ref2","userData","cards","style","backgroundImage","avatar","forEach","append","log","index","_ref3","_ref3$resetForm","resetForm","reset","Array","from","querySelectorAll","setCustomValidity","clearValidation","modalWindow","nameValue","descriptionValue","body","JSON","stringify","updateUserInfo","finally","newCard","prepend","imageLink","updateUserAvatar","preventDefault","patternMismatch","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation"],"sourceRoot":""}