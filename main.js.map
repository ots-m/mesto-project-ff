{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/components/modal.js","webpack://mesto-project-ff/./src/scripts/components/api.js","webpack://mesto-project-ff/./src/scripts/components/card.js","webpack://mesto-project-ff/./src/scripts/components/validation.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["export function openPopup(popup){\r\n  popup.classList.add('popup_is-opened');\r\n\r\n  document.addEventListener('keydown', pressEscape);\r\n} \r\n\r\nexport function closePopup(popup){\r\n  popup.classList.remove('popup_is-opened');\r\n\r\n  document.removeEventListener('keydown', pressEscape);\r\n}\r\n\r\nfunction clickOverlay(evt) {\r\n  if (evt.target.classList.contains('popup_is-opened')) {\r\n    closePopup(evt.target);\r\n  }\r\n}\r\n\r\nfunction pressEscape(evt) {\r\n  if (evt.key === 'Escape') {\r\n    const openPopup = document.querySelector('.popup_is-opened');\r\n    if (openPopup) {\r\n      closePopup(openPopup);\r\n    }\r\n  }\r\n}\r\n\r\nexport const setModalWindowEventListeners = (modalWindow) => {\r\n  modalWindow.classList.add('popup_is-animated');\r\n\r\n  const closeButton = modalWindow.querySelector(\".popup__close\");\r\n\r\n  closeButton.addEventListener('click', () => {\r\n    closePopup(modalWindow);\r\n  });\r\n\r\n  modalWindow.addEventListener('click', clickOverlay);\r\n}\r\n","const token = \"963414ea-0ced-4516-965e-e8c378c6da30\";\r\nconst cohortId = \"wff-cohort-38\";\r\n\r\nexport const config = {\r\n  baseUrl: `https://nomoreparties.co/v1/${cohortId}`,\r\n  headers: {\r\n    authorization: `${token}`,\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nconst handleResponse = (res) => {\r\n  if (!res.ok) {\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n  }\r\n  return res.json();\r\n}\r\n\r\nexport const getUserInfo = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  })\r\n  .then(handleResponse)\r\n};\r\n\r\nexport const updateUserInfo = (nameValue, descriptionValue) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: nameValue,\r\n      about: descriptionValue,\r\n    }),\r\n  })\r\n  .then(handleResponse)\r\n};\r\n\r\nexport const updateUserAvatar = (imageLink) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar `, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({ avatar: imageLink }),\r\n  })\r\n  .then(handleResponse)\r\n};\r\n\r\nexport const getCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"GET\",\r\n    headers: config.headers,\r\n  })\r\n  .then(handleResponse)\r\n};\r\n\r\nexport const createNewCard = (newCard) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify(newCard),\r\n  })\r\n  .then(handleResponse)\r\n};\r\n\r\nexport const getCardToDelete = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  })\r\n  .then(handleResponse)\r\n};\r\n\r\nexport const getLikeInfo = (cardId, method) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: method,\r\n    headers: config.headers,\r\n  })\r\n  .then(handleResponse)\r\n};\r\n","import { getLikeInfo } from \"./api.js\";\r\n\r\nexport const createCard = (card, { handleCardDelete, openPopupImage, likeToggle, }, currentUserId) => {\r\n  const cardTemplate = document.querySelector('#card-template').content;\r\n  const cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n  const cardImage = cardElement.querySelector('.card__image');\r\n  const cardLike = cardElement.querySelector('.card__like-button');\r\n  const cardLikeCount = cardElement.querySelector('.card__like-count');\r\n  const cardDeleteButton = cardElement.querySelector('.card__delete-button');\r\n\r\n  cardElement.dataset.id = card._id;\r\n  cardLike.dataset.id = card._id;\r\n  \r\n  cardImage.src = card.link; \r\n  cardImage.alt = card.name;\r\n\r\n  if (cardLikeCount && card.likes && currentUserId) {\r\n    if(card.likes.some(user => user._id == currentUserId)){\r\n      cardLike.classList.add('card__like-button_is-active');\r\n    }\r\n    cardLikeCount.textContent = card.likes.length;\r\n  }\r\n\r\n  if (card.owner._id != currentUserId) {\r\n    cardDeleteButton.remove();\r\n  } else {\r\n    cardDeleteButton.addEventListener('click', () => handleCardDelete(cardElement));\r\n  }\r\n  \r\n  cardLike.addEventListener('click', () => likeToggle(cardLike, cardLikeCount));\r\n\r\n  cardImage.addEventListener('click', () => openPopupImage(card));\r\n  \r\n  cardElement.querySelector('.card__title').textContent = card.name;\r\n\r\n  return cardElement;\r\n}\r\n\r\nexport function likeToggle(cardButton, cardLikeCount) {\r\n  const isLiked = cardButton.classList.contains('card__like-button_is-active');\r\n  const method = isLiked ? 'DELETE' : 'PUT';\r\n  const cardId = cardButton.dataset.id;\r\n  getLikeInfo(cardId, method)\r\n  .then (card => {\r\n    cardLikeCount.textContent = card.likes.length;\r\n    cardButton.classList.toggle('card__like-button_is-active', !isLiked);\r\n  }) \r\n  .catch(err => {\r\n    console.error(err);\r\n  });\r\n}\r\n\r\nexport function cardDelete(cardElement) {\r\n  cardElement.remove();\r\n}\r\n\r\n\r\n\r\n","const showInputError = (formElement, inputElement, errorMessage, config) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(config.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(config.errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement, config) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(config.inputErrorClass);\r\n  errorElement.classList.remove(config.errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\nconst checkInputValidity = (formElement, inputElement, config) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, config);\r\n  } else {\r\n    hideInputError(formElement, inputElement, config);\r\n  }\r\n};\r\n\r\nfunction hasInvalidInput(inputList) {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  })\r\n}\r\n\r\nconst disableSubmitButton = (buttonElement, config) => {\r\n  buttonElement.disabled = true;\r\n  buttonElement.classList.add(config.inactiveButtonClass);\r\n};\r\n\r\nconst enableSubmitButton = (buttonElement, config) => {\r\n  buttonElement.disabled = false;\r\n  buttonElement.classList.remove(config.inactiveButtonClass);\r\n};\r\n\r\nfunction toggleButtonState(inputList, buttonElement, config) {\r\n  if(hasInvalidInput(inputList)) {\r\n    disableSubmitButton(buttonElement, config);\r\n  } else {\r\n    enableSubmitButton(buttonElement, config);\r\n  }\r\n}\r\n\r\nconst setEventListeners = (formElement, config) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(config.inputSelector));\r\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, config);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      toggleButtonState(inputList, buttonElement, config);\r\n      checkInputValidity(formElement, inputElement, config);\r\n    });\r\n  });\r\n};\r\n\r\nexport const enableValidation = (config) => {\r\n  const formList = Array.from(document.querySelectorAll(config.formSelector));\r\n  formList.forEach((formElement) => {\r\n  setEventListeners(formElement, config);\r\n  }); \r\n}\r\n\r\nexport const clearValidation = (formElement, config) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(config.inputSelector));\r\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, config);\r\n    inputElement.setCustomValidity(\"\");\r\n  });\r\n\r\n  disableSubmitButton(buttonElement, config);\r\n};","import \"../pages/index.css\";\r\nimport { openPopup, closePopup, setModalWindowEventListeners } from \"./components/modal.js\";\r\nimport { createCard, likeToggle, cardDelete } from \"./components/card.js\";\r\nimport { enableValidation, clearValidation } from \"./components/validation.js\";\r\nimport {\r\n  getUserInfo,\r\n  getCards,\r\n  getCardToDelete,\r\n  updateUserInfo,\r\n  createNewCard,\r\n  updateUserAvatar,\r\n} from \"./components/api.js\";\r\n\r\nconst cardList = document.querySelector(\".places__list\");\r\n\r\nconst formEditProfile = document.forms[\"edit-profile\"];\r\nlet nameInput = formEditProfile.querySelector(\".popup__input_type_name\");\r\nlet descriptionInput = formEditProfile.querySelector(\".popup__input_type_description\");\r\n\r\nlet profileNameElement = document.querySelector(\".profile__title\");\r\nlet profileDescriptionElement = document.querySelector(\".profile__description\");\r\nlet profileImage = document.querySelector(\".profile__image\");\r\n\r\nconst formNewCard = document.forms[\"new-place\"];\r\nlet newCardNameInput = formNewCard.querySelector(\".popup__input_type_card-name\");\r\nlet newCardLinkInput = formNewCard.querySelector(\".popup__input_type_url\");\r\n\r\nconst formEditProfileAvatar = document.forms[\"edit-profile-avatar\"];\r\n\r\nconst formDeleteCardConfirm = document.forms[\"delete-card-confirm\"];\r\nconst ButtonDeleteConfirm = formDeleteCardConfirm.querySelector('.popup__button_confirm');\r\n\r\nconst forms = [formNewCard, formEditProfileAvatar];\r\n\r\nconst popupImage = document.querySelector(\".popup__image\");\r\nconst popupDescription = document.querySelector(\".popup__caption\");\r\n\r\nconst popupTypeEdit = document.querySelector(\".popup_type_edit\");\r\nconst popupTypeAdd = document.querySelector(\".popup_type_new-card\");\r\nconst popupTypeImage = document.querySelector(\".popup_type_image\");\r\nconst popupTypeConfirm = document.querySelector(\".popup_type_confirm\");\r\nconst popupTypeEditProfileAvatar = document.querySelector(\".popup_type_edit_profile_avatar\");\r\nconst popups = [\r\n  popupTypeAdd,\r\n  popupTypeEditProfileAvatar,\r\n  popupTypeEdit,\r\n  popupTypeImage,\r\n  popupTypeConfirm,\r\n];\r\n\r\nconst buttonEditProfileAvatar = document.querySelector(\".profile__image_button-edit\");\r\n\r\nlet cardIdToDelete = null;\r\nlet cardElementToDelete = null;\r\n\r\nlet currentUserId = null;\r\n\r\nconst profileEditButton = document.querySelector(\".profile__edit-button\");\r\nconst profileAddButton = document.querySelector(\".profile__add-button\");\r\nconst buttons = [profileAddButton, buttonEditProfileAvatar];\r\n\r\nconst validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"button_inactive\",\r\n  inputErrorClass: \"form__input_type_error\",\r\n  errorClass: \"form__input-error_active\",\r\n};\r\n\r\nconst cardData = { \r\n  handleCardDelete, \r\n  openPopupImage, \r\n  likeToggle, \r\n};\r\n\r\nPromise.all([getUserInfo(), getCards()])\r\n  .then(([userData, cards]) => {\r\n    currentUserId = userData._id;\r\n\r\n    profileDescriptionElement.textContent = userData.about;\r\n    profileNameElement.textContent = userData.name;\r\n    profileImage.style.backgroundImage = `url('${userData.avatar}')`;\r\n\r\n    cards.forEach((card) => {\r\n      const cardElement = createCard(card, cardData, currentUserId);\r\n      cardList.append(cardElement);\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  })\r\n\r\nfunction openPopupImage(card) {\r\n  popupDescription.textContent = card.name;\r\n  popupImage.alt = card.name;\r\n  popupImage.src = card.link;\r\n\r\n  openPopup(popupTypeImage);\r\n}\r\n\r\npopups.forEach(popup => {\r\n  setModalWindowEventListeners(popup);\r\n})\r\n\r\nfunction resetFormEditProfileInputs() {\r\n  nameInput.value = profileNameElement.textContent;\r\n  descriptionInput.value = profileDescriptionElement.textContent;\r\n}\r\n\r\nfunction resetAndOpenPopup({form, popup, resetForm = () => form.reset()}) {\r\n  resetForm();\r\n\r\n  clearValidation(form, validationConfig);\r\n\r\n  openPopup(popup);\r\n}\r\n\r\nbuttons.forEach((button, index) => {\r\n  button.addEventListener(\"click\", () => {\r\n    resetAndOpenPopup({\r\n      form: forms[index],\r\n      popup: popups[index],\r\n      resetForm: () => forms[index].reset(),\r\n    });\r\n  });\r\n});\r\n\r\nprofileEditButton.addEventListener(\"click\", () => {\r\n  resetAndOpenPopup({\r\n  form: formEditProfile,\r\n  popup: popupTypeEdit,\r\n  resetForm: resetFormEditProfileInputs,\r\n  })\r\n})\r\n\r\nfunction handleFormEditProfileSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  setButtonText(evt.target, true);\r\n  const nameValue = nameInput.value;\r\n  const descriptionValue = descriptionInput.value;\r\n\r\n  profileNameElement.textContent = nameValue;\r\n  profileDescriptionElement.textContent = descriptionValue;\r\n\r\n  updateUserInfo(nameValue, descriptionValue)\r\n    .then((data) => {;\r\n      profileNameElement.textContent = data.name;\r\n      profileDescriptionElement.textContent = data.about;\r\n      \r\n      closePopup(popupTypeEdit);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n    .finally(() => {\r\n      setButtonText(evt.target, false);\r\n    });\r\n}\r\n\r\nformEditProfile.addEventListener(\"submit\", handleFormEditProfileSubmit);\r\n\r\nfunction handleCardFormSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  setButtonText(evt.target, true);\r\n  const cardName = newCardNameInput.value;\r\n  const cardLink = newCardLinkInput.value;\r\n\r\n  const newCard = {\r\n    name: cardName,\r\n    link: cardLink,\r\n  };\r\n\r\n  createNewCard(newCard)\r\n    .then((card) => {\r\n      const cardElement = createCard(card, cardData, currentUserId);\r\n      cardList.prepend(cardElement);\r\n\r\n      closePopup(popupTypeAdd);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n    .finally(() => {\r\n      setButtonText(evt.target, false);\r\n    });\r\n}\r\n\r\nformNewCard.addEventListener(\"submit\", handleCardFormSubmit);\r\n\r\nfunction handleCardDelete(cardElement) {\r\n  openPopup(popupTypeConfirm);\r\n  cardIdToDelete = cardElement.dataset.id;\r\n  cardElementToDelete = cardElement;\r\n}\r\n\r\nfunction handleCardDeleteConfirm() {\r\n  getCardToDelete(cardIdToDelete)\r\n  .then(() => {\r\n    cardDelete(cardElementToDelete);\r\n    cardIdToDelete = null;\r\n    cardElementToDelete = null;\r\n    closePopup(popupTypeConfirm);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });\r\n}\r\n\r\nButtonDeleteConfirm.addEventListener(\"click\", handleCardDeleteConfirm);\r\n\r\nfunction handleAvatarFormSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  setButtonText(evt.target, true);\r\n  const imageLink = document.querySelector(\"#edit-profile\").value;\r\n\r\n  updateUserAvatar(imageLink)\r\n    .then(() => {\r\n      profileImage.style.backgroundImage = `url('${imageLink}')`;\r\n      \r\n      closePopup(popupTypeEditProfileAvatar);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n    .finally(() => {\r\n      setButtonText(evt.target, false);\r\n    });\r\n}\r\n\r\nformEditProfileAvatar.addEventListener(\"submit\", handleAvatarFormSubmit);\r\n\r\nfunction setButtonText(form, isLoading) {\r\n  const button = form.querySelector(\".popup__button\");\r\n  const defaultText = \"Сохранить\";\r\n  const loadingText = \"Сохранение...\";\r\n  if (button) {\r\n    button.textContent = isLoading ? loadingText : defaultText;\r\n  }\r\n}\r\n\r\nenableValidation(validationConfig);"],"names":["openPopup","popup","classList","add","document","addEventListener","pressEscape","closePopup","remove","removeEventListener","clickOverlay","evt","target","contains","key","querySelector","config","baseUrl","concat","headers","authorization","handleResponse","res","ok","json","Promise","reject","status","createCard","card","_ref","currentUserId","handleCardDelete","openPopupImage","likeToggle","cardElement","content","cloneNode","cardImage","cardLike","cardLikeCount","cardDeleteButton","dataset","id","_id","src","link","alt","name","likes","some","user","textContent","length","owner","hideInputError","formElement","inputElement","errorElement","inputErrorClass","errorClass","disableSubmitButton","buttonElement","disabled","inactiveButtonClass","toggleButtonState","inputList","validity","valid","hasInvalidInput","enableSubmitButton","cardList","formEditProfile","forms","nameInput","descriptionInput","profileNameElement","profileDescriptionElement","profileImage","formNewCard","newCardNameInput","newCardLinkInput","formEditProfileAvatar","ButtonDeleteConfirm","popupImage","popupDescription","popupTypeEdit","popupTypeAdd","popupTypeImage","popupTypeConfirm","popupTypeEditProfileAvatar","popups","buttonEditProfileAvatar","cardIdToDelete","cardElementToDelete","profileEditButton","buttons","validationConfig","formSelector","inputSelector","submitButtonSelector","cardData","cardButton","isLiked","method","cardId","fetch","then","getLikeInfo","toggle","catch","err","console","error","resetFormEditProfileInputs","value","resetAndOpenPopup","_ref3","form","_ref3$resetForm","resetForm","reset","Array","from","querySelectorAll","forEach","setCustomValidity","clearValidation","setButtonText","isLoading","button","all","_ref2","userData","cards","about","style","backgroundImage","avatar","append","log","modalWindow","index","preventDefault","nameValue","descriptionValue","body","JSON","stringify","updateUserInfo","data","finally","newCard","prepend","imageLink","updateUserAvatar","patternMismatch","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation"],"sourceRoot":""}