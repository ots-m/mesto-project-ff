{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/components/modal.js","webpack://mesto-project-ff/./src/scripts/components/api.js","webpack://mesto-project-ff/./src/scripts/components/card.js","webpack://mesto-project-ff/./src/scripts/components/validation.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["export function openPopup(popup){\r\n  popup.classList.add('popup_is-opened');\r\n  popup.classList.add('popup_is-animated');\r\n\r\n  document.addEventListener('click', clickOverlay);\r\n  document.addEventListener('keydown', pressEscape);\r\n} \r\n\r\nexport function closePopup(popup){\r\n  popup.classList.remove('popup_is-opened');\r\n\r\n  document.removeEventListener('click', clickOverlay);\r\n  document.removeEventListener('keydown', pressEscape);\r\n}\r\n\r\nfunction clickOverlay(evt) {\r\n  if (evt.target.classList.contains('popup_is-opened')) {\r\n    closePopup(evt.target);\r\n  }\r\n}\r\n\r\nfunction pressEscape(evt) {\r\n  if (evt.key === 'Escape') {\r\n    const openPopup = document.querySelector('.popup_is-opened');\r\n    if (openPopup) {\r\n      closePopup(openPopup);\r\n    }\r\n  }\r\n}\r\n","const token = \"963414ea-0ced-4516-965e-e8c378c6da30\";\r\nconst cohortId = \"wff-cohort-38\";\r\n\r\nexport const config = {\r\n  baseUrl: `https://nomoreparties.co/v1/${cohortId}`,\r\n  headers: {\r\n    authorization: `${token}`,\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nexport const getUserInfo = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  }).then((res) => {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n    return res.json();\r\n  });\r\n};\r\n\r\nexport const updateUserInfo = (nameValue, descriptionValue) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: nameValue,\r\n      about: descriptionValue,\r\n    }),\r\n  }).then((res) => {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n    return res.json();\r\n  });\r\n};\r\n\r\nexport const updateUserAvatar = (imageLink) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar `, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({ avatar: imageLink }),\r\n  }).then((res) => {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n    return res.json();\r\n  });\r\n};\r\n\r\nexport const getCards = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"GET\",\r\n    headers: config.headers,\r\n  }).then((res) => {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n    return res.json();\r\n  });\r\n};\r\n\r\nexport const createNewCard = (newCard) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify(newCard),\r\n  }).then((res) => {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n    return res.json();\r\n  });\r\n};\r\n\r\nexport const getCardToDelete = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  }).then((res) => {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n    return res.json();\r\n  });\r\n};\r\n\r\nexport const getLikeInfo = (cardId, method) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: method,\r\n    headers: config.headers,\r\n  }).then((res) => {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n    return res.json();\r\n  });\r\n};\r\n","import { getLikeInfo } from \"./api.js\";\r\n\r\nexport const createCard = (card, handleCardDelete, openPopupImage, likeToggle, currentUserId) => {\r\n  const cardTemplate = document.querySelector('#card-template').content;\r\n  const cardElement = cardTemplate.querySelector('.places__item').cloneNode(true);\r\n  const cardImage = cardElement.querySelector('.card__image');\r\n  const cardLike = cardElement.querySelector('.card__like-button');\r\n  const cardLikeCount = cardElement.querySelector('.card__like-count');\r\n  const cardDeleteButton = cardElement.querySelector('.card__delete-button');\r\n\r\n  cardElement.dataset.id = card._id;\r\n  cardLike.dataset.id = card._id;\r\n  \r\n  cardImage.src = card.link; \r\n  cardImage.alt = card.name;\r\n\r\n  if (cardLikeCount && card.likes && currentUserId) {\r\n    if(card.likes.some(user => user._id == currentUserId)){\r\n      cardLike.classList.add('card__like-button_is-active');\r\n    }\r\n    cardLikeCount.textContent = card.likes.length;\r\n  }\r\n\r\n  if (card.owner._id != currentUserId) {\r\n    cardDeleteButton.remove();\r\n  } else {\r\n    cardDeleteButton.addEventListener('click', () => handleCardDelete(cardElement));\r\n  }\r\n  \r\n  cardLike.addEventListener('click', () => likeToggle(cardLike, cardLikeCount));\r\n\r\n  cardImage.addEventListener('click', () => openPopupImage(card));\r\n  \r\n  cardElement.querySelector('.card__title').textContent = card.name;\r\n\r\n  return cardElement;\r\n}\r\n\r\nexport function likeToggle(cardButton, cardLikeCount) {\r\n  const isLiked = cardButton.classList.contains('card__like-button_is-active');\r\n  const method = isLiked ? 'DELETE' : 'PUT';\r\n  const cardId = cardButton.dataset.id;\r\n  getLikeInfo(cardId, method)\r\n  .then (card => {\r\n    cardLikeCount.textContent = card.likes.length;\r\n    cardButton.classList.toggle('card__like-button_is-active', !isLiked);\r\n  }) \r\n  .catch(err => {\r\n    console.error(err);\r\n  });\r\n}\r\n\r\nexport function cardDelete(cardElement) {\r\n  cardElement.remove();\r\n}\r\n\r\n\r\n\r\n","const showInputError = (formElement, inputElement, errorMessage, config) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(config.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(config.errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement, config) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(config.inputErrorClass);\r\n  errorElement.classList.remove(config.errorClass);\r\n  errorElement.textContent = '';\r\n};\r\n\r\nconst checkInputValidity = (formElement, inputElement, config) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(formElement, inputElement, inputElement.validationMessage, config);\r\n  } else {\r\n    hideInputError(formElement, inputElement, config);\r\n  }\r\n};\r\n\r\nfunction hasInvalidInput(inputList) {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  })\r\n}\r\n\r\nfunction toggleButtonState(inputList, buttonElement, config) {\r\n  if(hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(config.inactiveButtonClass);\r\n  } else {\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(config.inactiveButtonClass);\r\n  }\r\n}\r\n\r\nconst setEventListeners = (formElement, config) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(config.inputSelector));\r\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement, config);\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener('input', function () {\r\n      toggleButtonState(inputList, buttonElement, config);\r\n      checkInputValidity(formElement, inputElement, config);\r\n    });\r\n  });\r\n};\r\n\r\nexport const enableValidation = (config) => {\r\n  const formList = Array.from(document.querySelectorAll(config.formSelector));\r\n  formList.forEach((formElement) => {\r\n  formElement.addEventListener('submit', (evt) => {\r\n    evt.preventDefault();\r\n    });\r\n  setEventListeners(formElement, config);\r\n  }); \r\n}\r\n\r\nexport const clearValidation = (formElement, config) => {\r\n  const inputList = Array.from(formElement.querySelectorAll(config.inputSelector));\r\n  const buttonElement = formElement.querySelector(config.submitButtonSelector);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, config);\r\n    inputElement.setCustomValidity(\"\");\r\n  });\r\n\r\n  toggleButtonState(inputList, buttonElement, config);\r\n};","import \"../pages/index.css\";\r\nimport { openPopup, closePopup } from \"./components/modal.js\";\r\nimport { createCard, likeToggle, cardDelete } from \"./components/card.js\";\r\nimport { enableValidation, clearValidation } from \"./components/validation.js\";\r\nimport {\r\n  getUserInfo,\r\n  getCards,\r\n  getCardToDelete,\r\n  updateUserInfo,\r\n  createNewCard,\r\n  updateUserAvatar,\r\n} from \"./components/api.js\";\r\n\r\nconst cardList = document.querySelector(\".places__list\");\r\n\r\nconst formEditProfile = document.forms[\"edit-profile\"];\r\nlet nameInput = formEditProfile.querySelector(\".popup__input_type_name\");\r\nlet descriptionInput = formEditProfile.querySelector(\".popup__input_type_description\");\r\n\r\nlet profileNameElement = document.querySelector(\".profile__title\");\r\nlet profileDescriptionElement = document.querySelector(\".profile__description\");\r\nlet profileImage = document.querySelector(\".profile__image\");\r\n\r\nconst formNewCard = document.forms[\"new-place\"];\r\nlet newCardNameInput = formNewCard.querySelector(\".popup__input_type_card-name\");\r\nlet newCardLinkInput = formNewCard.querySelector(\".popup__input_type_url\");\r\n\r\nconst formEditProfileAvatar = document.forms[\"edit-profile-avatar\"];\r\n\r\nconst popupImage = document.querySelector(\".popup__image\");\r\nconst popupDescription = document.querySelector(\".popup__caption\");\r\n\r\nconst popupTypeEdit = document.querySelector(\".popup_type_edit\");\r\nconst popupTypeAdd = document.querySelector(\".popup_type_new-card\");\r\nconst popupTypeImage = document.querySelector(\".popup_type_image\");\r\nconst popupTypeConfirm = document.querySelector(\".popup_type_confirm\");\r\nconst popupTypeEditProfileAvatar = document.querySelector(\".popup_type_edit_profile_avatar\");\r\nconst popups = [\r\n  popupTypeEdit,\r\n  popupTypeAdd,\r\n  popupTypeImage,\r\n  popupTypeConfirm,\r\n  popupTypeEditProfileAvatar,\r\n];\r\n\r\nconst buttonConfirm = popupTypeConfirm.querySelector(\".popup__button_confirm\");\r\nconst buttonEditProfileAvatar = document.querySelector(\".profile__image_button-edit\");\r\n\r\nlet cardIdToDelete = null;\r\nlet cardElementToDelete = null;\r\n\r\nlet currentUserId = null;\r\n\r\nconst profileEditButton = document.querySelector(\".profile__edit-button\");\r\nconst profileAddButton = document.querySelector(\".profile__add-button\");\r\nconst buttons = [profileEditButton, profileAddButton];\r\n\r\nconst closeButton = document.querySelectorAll(\".popup__close\");\r\n\r\nconst validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"button_inactive\",\r\n  inputErrorClass: \"form__input_type_error\",\r\n  errorClass: \"form__input-error_active\",\r\n};\r\n\r\ngetUserInfo()\r\n  .then((userData) => {\r\n    currentUserId = userData._id;\r\n    profileDescriptionElement.textContent = userData.about;\r\n    profileNameElement.textContent = userData.name;\r\n    profileImage.style.backgroundImage = `url('${userData.avatar}')`;\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });\r\n\r\ngetCards()\r\n  .then((data) => {\r\n    data.forEach((card) => {\r\n      const cardElement = createCard(card, handleCardDelete, openPopupImage, likeToggle, currentUserId);\r\n      cardList.append(cardElement);\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });\r\n\r\nfunction handleCardDelete(cardElement) {\r\n  handleOpenPopup(popupTypeConfirm);\r\n  cardIdToDelete = cardElement.dataset.id;\r\n  cardElementToDelete = cardElement;\r\n}\r\n\r\nbuttonConfirm.addEventListener(\"click\", () => {\r\n        getCardToDelete(cardIdToDelete)\r\n    .then(() => {\r\n      cardDelete(cardElementToDelete);\r\n      cardIdToDelete = null;\r\n      cardElementToDelete = null;\r\n      closePopup(popupTypeConfirm);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n});\r\n\r\nfunction openPopupImage(card) {\r\n  popupDescription.textContent = card.name;\r\n  popupImage.alt = card.name;\r\n  popupImage.src = card.link;\r\n\r\n  handleOpenPopup(popupTypeImage);\r\n}\r\n\r\nbuttons.forEach((button, index) => {\r\n  button.addEventListener(\"click\", () => {\r\n    handleOpenPopup(popups[index]);\r\n  });\r\n});\r\n\r\ncloseButton.forEach((closeButton) => {\r\n  closeButton.addEventListener(\"click\", () => {\r\n    const popup = closeButton.closest(\".popup\");\r\n    closePopup(popup);\r\n  });\r\n});\r\n\r\nfunction resetFormEditInputs() {\r\n  nameInput.value = document.querySelector(\".profile__title\").textContent;\r\n  descriptionInput.value = document.querySelector(\".profile__description\").textContent;\r\n}\r\n\r\nfunction handleOpenPopup(popup) {\r\n  if (popup === popupTypeEdit) {\r\n    resetFormEditInputs();\r\n    clearValidation(formEditProfile, validationConfig);\r\n  } else if (popup === popupTypeAdd) {\r\n    formNewCard.reset();\r\n    clearValidation(formNewCard, validationConfig);\r\n  } else if (popup === popupTypeEditProfileAvatar) {\r\n    formEditProfileAvatar.reset();\r\n    clearValidation(formEditProfileAvatar, validationConfig);\r\n  }\r\n\r\n  openPopup(popup);\r\n}\r\n\r\nfunction handleFormEditProfileSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  setButtonText(evt.target, true);\r\n  const nameValue = nameInput.value;\r\n  const descriptionValue = descriptionInput.value;\r\n\r\n  profileNameElement.textContent = nameValue;\r\n  profileDescriptionElement.textContent = descriptionValue;\r\n\r\n  updateUserInfo(nameValue, descriptionValue)\r\n    .then((data) => {;\r\n      profileNameElement.textContent = data.name;\r\n      profileDescriptionElement.textContent = data.about;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n    .finally(() => {\r\n      setButtonText(evt.target, false);\r\n    });\r\n\r\n  closePopup(popupTypeEdit);\r\n}\r\n\r\nformEditProfile.addEventListener(\"submit\", handleFormEditProfileSubmit);\r\n\r\nfunction newCard(evt) {\r\n  evt.preventDefault();\r\n\r\n  setButtonText(evt.target, true);\r\n  const cardName = newCardNameInput.value;\r\n  const cardLink = newCardLinkInput.value;\r\n\r\n  const newCard = {\r\n    name: cardName,\r\n    link: cardLink,\r\n  };\r\n\r\n  createNewCard(newCard)\r\n    .then((data) => {\r\n      const cardElement = createCard(data, handleCardDelete, openPopupImage, likeToggle, currentUserId);\r\n      cardList.prepend(cardElement);\r\n\r\n      closePopup(popupTypeAdd);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n    .finally(() => {\r\n      setButtonText(evt.target, false);\r\n    });\r\n}\r\n\r\nformNewCard.addEventListener(\"submit\", newCard);\r\n\r\nbuttonEditProfileAvatar.addEventListener(\"click\", () => {\r\n  handleOpenPopup(popupTypeEditProfileAvatar);\r\n});\r\n\r\nfunction editAvatar(evt) {\r\n  evt.preventDefault();\r\n\r\n  setButtonText(evt.target, true);\r\n  const imageLink = document.querySelector(\"#edit-profile\").value;\r\n\r\n  updateUserAvatar(imageLink)\r\n    .then(() => {\r\n      profileImage.style.backgroundImage = `url('${imageLink}')`;\r\n      closePopup(popupTypeEditProfileAvatar);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    })\r\n    .finally(() => {\r\n      setButtonText(evt.target, false);\r\n    });\r\n}\r\n\r\nformEditProfileAvatar.addEventListener(\"submit\", editAvatar);\r\n\r\nfunction setButtonText(form, isLoading) {\r\n  const button = form.querySelector(\".popup__button\");\r\n  const defaultText = \"Сохранить\";\r\n  const loadingText = \"Сохранение...\";\r\n  if (button) {\r\n    button.textContent = isLoading ? loadingText : defaultText;\r\n  }\r\n}\r\n\r\nenableValidation(validationConfig);\r\n"],"names":["closePopup","popup","classList","remove","document","removeEventListener","clickOverlay","pressEscape","evt","target","contains","key","openPopup","querySelector","config","baseUrl","concat","headers","authorization","createCard","card","handleCardDelete","openPopupImage","likeToggle","currentUserId","cardElement","content","cloneNode","cardImage","cardLike","cardLikeCount","cardDeleteButton","dataset","id","_id","src","link","alt","name","likes","some","user","add","textContent","length","owner","addEventListener","cardButton","isLiked","method","cardId","fetch","then","res","ok","json","Promise","reject","status","getLikeInfo","toggle","catch","err","console","error","hideInputError","formElement","inputElement","errorElement","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","disabled","inactiveButtonClass","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","setCustomValidity","cardList","formEditProfile","forms","nameInput","descriptionInput","profileNameElement","profileDescriptionElement","profileImage","formNewCard","newCardNameInput","newCardLinkInput","formEditProfileAvatar","popupImage","popupDescription","popupTypeEdit","popupTypeAdd","popupTypeImage","popupTypeConfirm","popupTypeEditProfileAvatar","popups","buttonConfirm","buttonEditProfileAvatar","cardIdToDelete","cardElementToDelete","buttons","closeButton","validationConfig","formSelector","handleOpenPopup","value","reset","setButtonText","form","isLoading","button","userData","about","style","backgroundImage","avatar","log","data","append","index","closest","preventDefault","nameValue","descriptionValue","body","JSON","stringify","updateUserInfo","finally","newCard","prepend","imageLink","updateUserAvatar","patternMismatch","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation"],"sourceRoot":""}